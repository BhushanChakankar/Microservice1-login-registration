spring.datasource.url=jdbc:postgresql://122.175.39.120:5432/ecom
spring.datasource.username=ENC(KKyFtgISgwORikKBPHmklK5CP4joafX3)
spring.datasource.password=ENC(oEmHxhRdu6pTQXYnIJ4WQElpaDAzjgun)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update 
springdoc.swagger-ui.defaultModelsExpandDepth=-1
server.servlet.context-path=/registration-api/
server.port=9091
spring.jpa.show-sql=true
spring.profiles.active=dev
spring.jpa.properties.hibernate.current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl


## Enable debug logging for Spring Security
#logging.level.org.springframework.security=DEBUG
#
## Enable debug logging for your specific package (change "com.example" to your actual package)
#logging.level.com.example=DEBUG
#
## Enable debug logging for Hibernate (if you're using Hibernate)
#logging.level.org.hibernate=DEBUG

# success response properties
app.response.success.status=true
app.response.success.statusCode=200
app.response.success.message=Success

# Error response properties
app.response.error.status=false
app.response.error.statusCode=500
app.response.error.message=Error occurred

app.response.notFound.status=false
app.response.notFound.statusCode=404
app.response.notFound.message=Not Found

# Validation failure properties
app.response.validationFailure.status=false
app.response.validationFailure.statusCode=403
app.response.validationFailure.message=Validation Failed

# Bad Request response properties
app.response.badRequest.status=false
app.response.badRequest.statusCode=400
app.response.badRequest.message=Bad Request

# Unauthorized response properties
app.response.unauthorized.status=false
app.response.unauthorized.statusCode=401
app.response.unauthorized.message=Unauthorized

# Forbidden response properties
app.response.forbidden.status=false
app.response.forbidden.statusCode=403
app.response.forbidden.message=Forbidden

# Success messages
registration.customer.success=Customer registered successfully
registration.seller.success=Seller registered successfully
registration.admin.success=Admin registered successfully

# Error messages
registration.customer.error=Customer registration failed
registration.seller.error=Seller registration failed
registration.admin.error=Admin registration failed

error.duplicateUser= The user with the provided email already exists.

api.response.login.mobile-role-missing=Please provide mobile number and role.
api.response.login.invalid-credentials=Invalid Credentials
api.response.login.otp-sent=OTP sent Succesfully
api.response.validate-otp.invalid-otp=Invalid OTP
app.response.error.duplicateMobileNumber=The user with the provided mobile number already exists.
registration.message=You do not have an account. Please register yourself.
unsupported.role.message=Unsupported role: %s
unsupported.entity.message=Unsupported table/entity for role: %s
api.response.validate-otp=Otp Validated Succesfully
message.locationEnabledSuccess=Location enabled and updated successfully
message.userNotFound=No user found with the provided details
message.errorOccurred=An error occurred while enabling and updating location
api.response.access-denied.message=You don't have access to perform this operation
message.profilePhotoUpdateSuccess=Profile photo updated successfully
message.profilePhotoUpdateError=An error occurred while updating the profile photo

message.profilePhotoSaveSuccess=Profile photo saved successfully
message.profilePhotoSaveError=An error occurred while saving the profile photo
message.profilePhotoDeleteSuccess=Profile photo deleted successfully
message.profilePhotoDeleteError=An error occurred while deleting the profile photo

successRatingMessage=Rating submitted successfully
failureRatingMessage=Failed to submit rating
successReviewMessage=Review submitted successfully
failureReviewMessage=Failed to submit review
please.provide-token=Please provide the token
# Success messages
success.cancelOrder = Order has been successfully cancelled.

# Error messages
error.invalidOrderStatus = Order cannot be cancelled. Only pending orders can be cancelled.
error.orderNotFound = Order not found for the given customer.
cart.not.found.message=Cart not found for the user. Please add items to the cart first.

spring.main.allow-bean-definition-overriding=true

app.jwt.secretKey=5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437


# Module Names
module.address=Address
module.registration=Registration
module.login=Login
module.subscriptions=Subscription

# Module Operations
module.operation.create=C
module.operation.read=R
module.operation.update=U
module.operation.delete=D


subscription.expired.weekly = Your weekly subscription has expired. Please renew it.
subscription.expired.monthly = Your monthly subscription has expired. Please renew it.
subscription.expired.yearly = Your yearly subscription has expired. Please renew it.



error.messages.invalidEmail=Invalid email address.
error.messages.referralExists=You have already referred this friend.
error.messages.referralEmailSendingFailed=Failed to send the referral email.
success.messages.referralEmailSent=Referral email sent successfully.


email.subject=Invitation to Join Our Ecommerce Platform
email.text=Join us at https://www.extwebtech.com/ using the referral code: {0}






# Table names
database.users.table=public.users
database.ratings_reviews.table=public.ratingsreviews


# User Table Columns
database.users.user_id=id
database.users.name=name
database.users.mobile=mobile
database.users.email=email
database.users.profile_photo=profile_photo
database.users.business_name=business_name
database.users.owner_name=owner_name
database.users.gst=gst
database.users.account_holder_name=account_holder_name
database.users.account_name=account_name
database.users.ifsc_code=ifsc_code
database.users.bank_upi=bank_upi
database.users.role_id=role_id
database.users.language_id=language_id
database.users.created_date=created_date
database.users.updated_date=updated_date
database.users.country_id=country_id
database.users.business_address=business_address
database.users.extra_field=extra_field
database.users.official_documents=official_documents
database.users.active=active
database.users.subscription_id=subscription_id
database.users.subscription_start_date=subscription_start_date
database.users.subscription_days_remaining=subscription_days_remaining

# Ratings and Reviews Table Columns
database.ratings_reviews.ratings=ratings
database.ratings_reviews.reviews=reviews
database.ratings_reviews.customer_id=customer_id
database.ratings_reviews.seller_id=seller_id




# Table names
database.notifications.table=usernotification
database.login_details.table=logindetails
database.admin_notification.table=adminnotification

# Notifications Table Columns
database.notifications.user_id=user_id
database.notifications.notification_id=notification_id
database.notifications.created_by=created_by

# Login Details Table Columns
database.login_details.device_token=device_token

# Admin Notification Table Columns
database.admin_notification.title=title
database.admin_notification.description=description
database.admin_notification.id=id
database.admin_notification.created_by=created_by

database.subscriptions.id=id

# Login Details Table Columns
database.login_details.user_mobile=user_mobile
database.login_details.device_details=device_details
database.login_details.device_type=device_type
database.login_details.user_id=user_id


#spring.kafka.producer.bootstrap-servers=10.10.0.158:9092
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.topic.name=registration



#management.endpoints.web.exposure.include=*
#management.endpoint.health.show-details=always



# Log messages
log.messages.methodStart = Starting {} method
log.messages.methodEnd = {} method completed successfully
log.messages.methodError = Error in {} method
log.messages.methodData = {} method for {}


spring.application.name=Registartion Service

#eureka.client.fetch-registry=true
#eureka.instance.prefer-ip-address=true
#eureka.client.register-with-eureka=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


api.otp.expire.time=1440
api.otp.expire.status.code=410
api.otp.expire.message=Otp was expired


